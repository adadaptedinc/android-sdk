apply plugin:  'jacoco'

jacoco {
    toolVersion = "0.8.7"
    reportsDir = file("$buildDir/coverage")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

project.afterEvaluate {

    android.libraryVariants.all { variant ->
        def variantName = variant.name
        def testTaskName = "test${variantName.capitalize()}UnitTest"

        tasks.create(name: "${testTaskName}Coverage", type: JacocoReport, dependsOn: "$testTaskName") {
            group = "Reporting"
            description = "Generate Jacoco coverage reports for the ${variantName.capitalize()} build."

            reports {
                html.enabled = true
                xml.enabled = true
            }

            def excludes = [
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*Test*.*',
                    '**/*$[0-9].*',
                    'android/**/*.*',
                    'jdk.internal.*',
                    '**/EventStrings.*',
                    '**/DeviceInfoExtractor.*',
                    '**/AdditInterceptActivity.*',
                    '**/AdWebView.*',
                    '**/AaWebViewPopupActivity.*',
                    '**/PixelWebView.*',
                    '**/Config.*',
                    '**/AdAdapted.*',
                    '**/AddToListContent.*',
                    '**/Dimension*.*',
                    '**/DeeplinkContentParser.*',
                    '**/PayloadContentParser.*',
                    '**/Http*.*',
                    '**/Json*.*',
            ]
            def javaClasses = fileTree(dir: variant.javaCompiler.destinationDir, excludes: excludes)
            def kotlinClasses = fileTree(dir: "${buildDir}/tmp/kotlin-classes/${variantName}", excludes: excludes)
            classDirectories.from = files([javaClasses, kotlinClasses])

            sourceDirectories.from = files([
                    "$project.projectDir/src/main/java",
                    "$project.projectDir/src/${variantName}/java",
                    "$project.projectDir/src/main/kotlin",
                    "$project.projectDir/src/${variantName}/kotlin"
            ])

            executionData.from = files("${project.buildDir}/jacoco/${testTaskName}.exec")
        }
    }
}